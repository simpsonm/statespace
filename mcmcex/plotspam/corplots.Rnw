\documentclass{article}
\usepackage{graphicx, color, amssymb, amsmath, bm, rotating, graphics,
epsfig, multicol}
\usepackage[maxfloats=48]{morefloats} %for >18 figures
\usepackage{booktabs}
\usepackage{caption}
\usepackage{fullpage}
\begin{document}

% \SweaveOpts{fig.path='figure/', fig.align='center', fig.show='hold'}
%                out.width=".47\\textwidth",
<<setup, include=FALSE, cache=FALSE>>=
options(replace.assign=TRUE,width=90)
opts_knit$set(eval.after = "fig.cap")
opts_chunk$set(dev="pdf",
               fig.lp = "",
               fig.keep="high",
               fig.show="hold",
               fig.align="center",
               fig.pos="!ht")
@


<<loaddata, echo=FALSE>>=
load("../cors/newpostcors.RData")
load("../mixing/OldSims32814/samout.RData")
load("../mixing/OldSims32814/trialtSAM.RData")
##samout1 <- samout
load("../mixing/OldSims32814/postcors.RData")
##load("../randkern/samoutinit.RData")
##samout <- rbind(samout1, samout)
library(ggplot2)
library(scales)
library(plyr)
library(xtable)
library(reshape2)
sams <- c("error", "state", "dist")
kerns <- c("sdkern", "sekern", "dekern", "trikern")
alts <- c("sdalt", "sealt", "dealt", "trialt")
ints <- c("sdint", "seint", "deint", "triint")
samout$type <- "Base"
samout$type[samout$sampler %in% kerns] <- "RandKern"
samout$type[samout$sampler %in% alts] <- "Alternating"
samout$type[samout$sampler %in% ints] <- "Interweaving"
samout$samplers <- "Base"
samout$samplers[substr(samout$sampler, 1, 2)=="sd"] <- "State-Dist"
samout$samplers[substr(samout$sampler, 1, 2)=="se"] <- "State-Error"
samout$samplers[substr(samout$sampler, 1, 2)=="de"] <- "Dist-Error"
samout$samplers[substr(samout$sampler, 1, 3)=="tri"] <- "Triple"

meltedsam <- melt(samout, id=c("type", "samplers", "sampler", "V.T", "W.T", 
                            "T.T"))
Vs <- 10^c(-2,-1,0,1,2)
Ws <- Vs
breaks <- round(Vs, 3)
label_both_parsed <- function(variable, value){
  llply(as.character(paste(variable, value, sep = ": ")), function(x) parse(text = x))
}
label_both_parsed_split <- function(variable, value){
  llply(as.character(paste(variable, value, sep = ": ")), 
        function(x) parse(text = strsplit(x, "\\.")[[1]][1]))
}
meltedcors <- melt(postcors, id=c("V.T", "W.T", "T.T"))

corplotfun <- function(meltedcors, T, vars, title, limits){
  castedcors <- dcast(meltedcors, formula=V.T + W.T + variable ~ .,
                      subset=.(variable %in% vars & T.T==T & V.T<=10^2 & W.T <=10^2))
  colnames(castedcors)[4] <- "value"
  castedcors$parameter <- substr(as.character(castedcors$variable), 1, 1)
  castedcors$statevar <- substr(as.character(castedcors$variable), 2, length(castedcors$variable))
  castedcors$statevar[substr(castedcors$statevar, 1, 1)=="t"] <- "theta"
  castedcors$statevar[substr(castedcors$statevar, 1, 1)=="g"] <- "gamma"
  castedcors$statevar[substr(castedcors$statevar, 1, 1)=="p"] <- "psi"
  p <- ggplot(data=castedcors, aes(x=V.T, y=W.T, fill=value)) + 
    geom_tile() + 
    facet_grid(parameter~statevar, scales="free", labeller=label_parsed) + 
    scale_x_log10("V = noise", breaks=Vs) + 
    scale_y_log10("W = signal", breaks=Vs) + 
    ggtitle(title) + 
    theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust=0.5))
  if(limits[1]==-1){
    p + scale_fill_gradient2("Corr", low=muted("blue"), high=muted("red"), 
                             limits=limits, mid="white", guide=guide_colorbar(barheight=10))
  }
  else{
    p + scale_fill_gradient2("Corr", low="white", high=muted("red"), 
                             limits=limits, guide=guide_colorbar(barheight=10))
    
  }

}

@ 


<<newcors, echo=FALSE, fig.height=3, fig.width=8, out.width=".75\\textwidth", fig.cap=cap>>=
cap <- "Posterior correlation between $V$ or $W$ and $b_V$ or $b_W$. $X$ and $Y$ axes indicate the true values of $V$ and $W$ respectively for the simulated data. Note that the signal-to-noise ratio is constant moving up any diagonal. In the upper left the signal is high, in the lower right the noise is high."
ggplot(data=newpostcors, aes(x=V.T, y=W.T, fill=Vbv)) + #$
    geom_tile() +
    scale_fill_gradient2("Corr", low=muted("blue"), high=muted("red"),
                         limits=c(-1,1), mid="white") +
    facet_grid(.~T, scales="free", labeller=label_both) +
    scale_x_log10("V = noise", breaks=Vs) +
    scale_y_log10("W = signal", breaks=Vs) +
    ggtitle("Posterior Correlation Between V and bv") +
    theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust=0.5))

ggplot(data=newpostcors, aes(x=V.T, y=W.T, fill=Vbw)) + #$
    geom_tile() +
    scale_fill_gradient2("Corr", low=muted("blue"), high=muted("red"),
                         limits=c(-1,1), mid="white") +
    facet_grid(.~T, scales="free", labeller=label_both) +
    scale_x_log10("V = noise", breaks=Vs) +
    scale_y_log10("W = signal", breaks=Vs) +
    ggtitle("Posterior Correlation Between V and bw") +
    theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust=0.5))

ggplot(data=newpostcors, aes(x=V.T, y=W.T, fill=Wbw)) + #$
    geom_tile() +
    scale_fill_gradient2("Corr", low=muted("blue"), high=muted("red"),
                         limits=c(-1,1), mid="white") +
    facet_grid(.~T, scales="free", labeller=label_both) +
    scale_x_log10("V = noise", breaks=Vs) +
    scale_y_log10("W = signal", breaks=Vs) +
    ggtitle("Posterior Correlation Between W and bw") +
    theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust=0.5))

ggplot(data=newpostcors, aes(x=V.T, y=W.T, fill=Wbv)) + #$
    geom_tile() +
    scale_fill_gradient2("Corr", low=muted("blue"), high=muted("red"),
                         limits=c(-1,1), mid="white") +
    facet_grid(.~T, scales="free", labeller=label_both) +
    scale_x_log10("V = noise", breaks=Vs) +
    scale_y_log10("W = signal", breaks=Vs) +
    ggtitle("Posterior Correlation Between W and bv") +
    theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust=0.5))
@ 

<<newcors2, echo=FALSE, fig.height=3, fig.width=8, out.width=".75\\textwidth", fig.cap=cap>>=
cap <- "Posterior correlation between $V$ or $W$ and $a_\\gamma$, $b_\\gamma$, $a_\\psi$, or $b_\\psi$. $X$ and $Y$ axes indicate the true values of $V$ and $W$ respectively for the simulated data. Note that the signal-to-noise ratio is constant moving up any diagonal. In the upper left the signal is high, in the lower right the noise is high."

ggplot(data=newpostcors, aes(x=V.T, y=W.T, fill=Wagam)) + #$
    geom_tile() +
    scale_fill_gradient2("Corr", low=muted("blue"), high=muted("red"),
                         limits=c(-1,1), mid="white") +
    facet_grid(.~T, scales="free", labeller=label_both) +
    scale_x_log10("V = noise", breaks=Vs) +
    scale_y_log10("W = signal", breaks=Vs) +
    ggtitle("Posterior Correlation Between W and a_gamma") +
    theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust=0.5))

ggplot(data=newpostcors, aes(x=V.T, y=W.T, fill=Wbgam)) + #$
    geom_tile() +
    scale_fill_gradient2("Corr", low=muted("blue"), high=muted("red"),
                         limits=c(-1,1), mid="white") +
    facet_grid(.~T, scales="free", labeller=label_both) +
    scale_x_log10("V = noise", breaks=Vs) +
    scale_y_log10("W = signal", breaks=Vs) +
    ggtitle("Posterior Correlation Between W and b_gamma") +
    theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust=0.5))

ggplot(data=newpostcors, aes(x=V.T, y=W.T, fill=Vapsi)) + #$
    geom_tile() +
    scale_fill_gradient2("Corr", low=muted("blue"), high=muted("red"),
                         limits=c(-1,1), mid="white") +
    facet_grid(.~T, scales="free", labeller=label_both) +
    scale_x_log10("V = noise", breaks=Vs) +
    scale_y_log10("W = signal", breaks=Vs) +
    ggtitle("Posterior Correlation Between V and a_psi") +
    theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust=0.5))

ggplot(data=newpostcors, aes(x=V.T, y=W.T, fill=Vbpsi)) + #$
    geom_tile() +
    scale_fill_gradient2("Corr", low=muted("blue"), high=muted("red"),
                         limits=c(-1,1), mid="white") +
    facet_grid(.~T, scales="free", labeller=label_both) +
    scale_x_log10("V = noise", breaks=Vs) +
    scale_y_log10("W = signal", breaks=Vs) +
    ggtitle("Posterior Correlation Between V and b_psi") +
    theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust=0.5))
@ 
<<postplotVW, echo=FALSE, fig.height=3, fig.cap=cap>>=
cap <- "Posterior correlation between $V$ and $W$. $X$ and $Y$ axes indicate the true values of $V$ and $W$ respectively for the simulated data. Note that the signal-to-noise ratio is constant moving 
up any diagonal. In the upper left the signal is high, in the lower right the noise is high."
postcors$T <- postcors$T.T
ggplot(data=postcors, aes(x=V.T, y=W.T, fill=VW)) + #$
    geom_tile() +
    scale_fill_gradient2("Corr", low=muted("blue"), high=muted("red"),
                         limits=c(-1,1), mid="white") +
    facet_grid(.~T, scales="free", labeller=label_both) +
    scale_x_log10("V = noise", breaks=Vs) +
    scale_y_log10("W = signal", breaks=Vs) +
    ggtitle("Posterior Correlation Between V and W") +
    theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust=0.5))
@

<<maxcorplotT10, echo=FALSE, fig.cap=cap, fig.height=5>>=
cap <- "Maximum (in magnitude) of the posterior correlations between either $V$ or $W$ and either the $\\theta$'s, $\\gamma$'s, and $\\psi$'s for a time series of length $T=10$. $X$ and $Y$ axes indicate the true values of $V$ and $W$ respectively for the simulated data. Note that the signal-to-noise ratio is constant moving up any diagonal. In the upper left the signal is high, in the lower right the noise is high."
vars <- c("VgammaMax", "WgammaMax", "VpsiMax", "WpsiMax", "VthetaMax", "WthetaMax")
title <- expression(paste("Max Correlation Between V or W and the ", theta, 
        "'s, ", gamma, "'s, or ", psi, "'s, T=", 10))
corplotfun(meltedcors, 10, vars, title, limits=c(-1,1))
@


<<maxcorplotT100, echo=FALSE, fig.cap=cap, fig.height=5>>=
cap <- "Maximum (in magnitude) of the posterior correlations between either $V$ or $W$ and either the $\\theta$'s, $\\gamma$'s, and $\\psi$'s for a time series of length $T=100$. $X$ and $Y$ axes indicate the true values of $V$ and $W$ respectively for the simulated data. Note that the signal-to-noise ratio is constant moving up any diagonal. In the upper left the signal is high, in the lower right the noise is high."
vars <- c("VgammaMax", "WgammaMax", "VpsiMax", "WpsiMax", "VthetaMax", "WthetaMax")
title <- expression(paste("Max Correlation Between V or W and the ", theta, 
        "'s, ", gamma, "'s, or ", psi, "'s, T=", 100))
corplotfun(meltedcors, 100, vars, title, limits=c(-1,1))
@


<<maxcorplotT1000, echo=FALSE, fig.cap=cap, fig.height=5>>=
cap <- "Maximum (in magnitude) of the posterior correlations between either $V$ or $W$ and either the $\\theta$'s, $\\gamma$'s, and $\\psi$'s for a time series of length $T=1000$. $X$ and $Y$ axes indicate the true values of $V$ and $W$ respectively for the simulated data. Note that the signal-to-noise ratio is constant moving up any diagonal. In the upper left the signal is high, in the lower right the noise is high."
vars <- c("VgammaMax", "WgammaMax", "VpsiMax", "WpsiMax", "VthetaMax", "WthetaMax")
title <- expression(paste("Max Correlation Between V or W and the ", theta, 
        "'s, ", gamma, "'s, or ", psi, "'s, T=", 1000))
corplotfun(meltedcors, 1000, vars, title, limits=c(-1,1))
@

<<avgcorplotT10, echo=FALSE, fig.cap=cap, fig.height=5>>=
cap <- "Average (in magnitude) of the posterior correlations between either $V$ or $W$ and either the $\\theta$'s, $\\gamma$'s, and $\\psi$'s for a time series of length $T=10$. $X$ and $Y$ axes indicate the true values of $V$ and $W$ respectively for the simulated data. Note that the signal-to-noise ratio is constant moving up any diagonal. In the upper left the signal is high, in the lower right the noise is high."
vars <- c("VgammaAvg", "WgammaAvg", "VpsiAvg", "WpsiAvg", "VthetaAvg", "WthetaAvg")
title <- expression(paste("Average Correlation Between V or W and the ", theta, 
        "'s, ", gamma, "'s, or ", psi, "'s, T=", 10))
corplotfun(meltedcors, 10, vars, title, limits=c(0,1))
@ 

<<avgcorplotT100, echo=FALSE, fig.cap=cap, fig.height=5>>=
cap <- "Average (in magnitude) of the posterior correlations between either $V$ or $W$ and either the $\\theta$'s, $\\gamma$'s, and $\\psi$'s for a time series of length $T=100$. $X$ and $Y$ axes indicate the true values of $V$ and $W$ respectively for the simulated data. Note that the signal-to-noise ratio is constant moving up any diagonal. In the upper left the signal is high, in the lower right the noise is high."
vars <- c("VgammaAvg", "WgammaAvg", "VpsiAvg", "WpsiAvg", "VthetaAvg", "WthetaAvg")
title <- expression(paste("Average Correlation Between V or W and the ", theta, 
        "'s, ", gamma, "'s, or ", psi, "'s, T=", 100))
corplotfun(meltedcors, 100, vars, title, limits=c(0,1))
@ 

<<avgcorplotT1000, echo=FALSE, fig.cap=cap, fig.height=5>>=
cap <- "Average (in magnitude) of the posterior correlations between either $V$ or $W$ and either the $\\theta$'s, $\\gamma$'s, and $\\psi$'s for a time series of length $T=1000$. $X$ and $Y$ axes indicate the true values of $V$ and $W$ respectively for the simulated data. Note that the signal-to-noise ratio is constant moving up any diagonal. In the upper left the signal is high, in the lower right the noise is high."
vars <- c("VgammaAvg", "WgammaAvg", "VpsiAvg", "WpsiAvg", "VthetaAvg", "WthetaAvg")
title <- expression(paste("Average Correlation Between V or W and the ", theta, 
        "'s, ", gamma, "'s, or ", psi, "'s, T=", 1000))
corplotfun(meltedcors, 1000, vars, title, limits=c(0,1))
@ 

<<thetacorplotT10, echo=FALSE, fig.cap=cap, fig.height=3.5, fig.width=7>>=
cap <- "Posterior correlations between either $V$ or $W$ and some of the $\\theta$'s for a time series of length $T=10$. $X$ and $Y$ axes indicate the true values of $V$ and $W$ respectively for the simulated data. Note that the signal-to-noise ratio is constant moving up any diagonal. In the upper left the signal is high, in the lower right the noise is high."
vars1 <- c("theta0", "theta1", "thT4", "thT2", "th3T4", "thetaT")
vars <- c(paste("V", vars1, sep=""), paste("W", vars1, sep=""))
title <- expression(paste("Correlation Between V or W and the ", theta, 
        "'s,", "T=", 10))
castedcors <- dcast(meltedcors, formula=V.T + W.T + variable ~ .,
                    subset=.(variable %in% vars & T.T==10 & V.T<=10^2 & W.T <=10^2))
colnames(castedcors)[4] <- "value"
castedcors$parameter <- substr(as.character(castedcors$variable), 1, 1)
castedcors$statevar <- substr(as.character(castedcors$variable), 2, length(castedcors$variable))
lens <- nchar(as.character(castedcors$statevar)) 
castedcors$statevar[substr(castedcors$statevar, lens, lens)=="0"] <- "theta[0]"
castedcors$statevar[substr(castedcors$statevar, lens, lens)=="1"] <- "theta[1]"
castedcors$statevar[substr(castedcors$statevar, lens, lens)=="T"] <- "theta[T]"
castedcors$statevar[substr(castedcors$statevar, lens, lens)=="2"] <- "theta[frac(T,2)]"
castedcors$statevar[substr(castedcors$statevar, lens-2, lens)=="hT4"] <- "theta[frac(T,4)]"
castedcors$statevar[substr(castedcors$statevar, lens-2, lens)=="3T4"] <- "theta[frac(paste(3,T),4)]"
ggplot(data=castedcors, aes(x=V.T, y=W.T, fill=value)) + 
  geom_tile() + 
  facet_grid(parameter~statevar, scales="free", labeller=label_parsed) + 
  scale_x_log10("V = noise", breaks=Vs) + 
  scale_y_log10("W = signal", breaks=Vs) + 
  ggtitle(title) + 
  theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust=0.5)) +
  scale_fill_gradient2("Corr", low=muted("blue"), high=muted("red"), 
                       limits=c(-1,1), mid="white", guide=guide_colorbar(barheight=10))
@ 


<<thetacorplotT100, echo=FALSE, fig.cap=cap, fig.height=3.5, fig.width=7>>=
cap <- "Posterior correlations between either $V$ or $W$ and some of the $\\theta$'s for a time series of length $T=1000$. $X$ and $Y$ axes indicate the true values of $V$ and $W$ respectively for the simulated data. Note that the signal-to-noise ratio is constant moving up any diagonal. In the upper left the signal is high, in the lower right the noise is high."
vars1 <- c("theta0", "theta1", "thT4", "thT2", "th3T4", "thetaT")
vars <- c(paste("V", vars1, sep=""), paste("W", vars1, sep=""))
title <- expression(paste("Correlation Between V or W and the ", theta, 
        "'s,", "T=", 100))
castedcors <- dcast(meltedcors, formula=V.T + W.T + variable ~ .,
                    subset=.(variable %in% vars & T.T==100 & V.T<=10^2 & W.T <=10^2))
colnames(castedcors)[4] <- "value"
castedcors$parameter <- substr(as.character(castedcors$variable), 1, 1)
castedcors$statevar <- substr(as.character(castedcors$variable), 2, length(castedcors$variable))
lens <- nchar(as.character(castedcors$statevar)) 
castedcors$statevar[substr(castedcors$statevar, lens, lens)=="0"] <- "theta[0]"
castedcors$statevar[substr(castedcors$statevar, lens, lens)=="1"] <- "theta[1]"
castedcors$statevar[substr(castedcors$statevar, lens, lens)=="T"] <- "theta[T]"
castedcors$statevar[substr(castedcors$statevar, lens, lens)=="2"] <- "theta[frac(T,2)]"
castedcors$statevar[substr(castedcors$statevar, lens-2, lens)=="hT4"] <- "theta[frac(T,4)]"
castedcors$statevar[substr(castedcors$statevar, lens-2, lens)=="3T4"] <- "theta[frac(paste(3,T),4)]"
ggplot(data=castedcors, aes(x=V.T, y=W.T, fill=value)) + 
  geom_tile() + 
  facet_grid(parameter~statevar, scales="free", labeller=label_parsed) + 
  scale_x_log10("V = noise", breaks=Vs) + 
  scale_y_log10("W = signal", breaks=Vs) + 
  ggtitle(title) + 
  theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust=0.5)) +
  scale_fill_gradient2("Corr", low=muted("blue"), high=muted("red"), 
                       limits=c(-1,1), mid="white", guide=guide_colorbar(barheight=10))
@


<<thetacorplotT1000, echo=FALSE, fig.cap=cap, fig.height=3.5, fig.width=7>>=
cap <- "Posterior correlations between either $V$ or $W$ and some of the $\\theta$'s for a time series of length $T=1000$. $X$ and $Y$ axes indicate the true values of $V$ and $W$ respectively for the simulated data. Note that the signal-to-noise ratio is constant moving up any diagonal. In the upper left the signal is high, in the lower right the noise is high."
vars1 <- c("theta0", "theta1", "thT4", "thT2", "th3T4", "thetaT")
vars <- c(paste("V", vars1, sep=""), paste("W", vars1, sep=""))
title <- expression(paste("Correlation Between V or W and the ", theta, 
        "'s,", "T=", 1000))
castedcors <- dcast(meltedcors, formula=V.T + W.T + variable ~ .,
                    subset=.(variable %in% vars & T.T==1000 & V.T<=10^2 & W.T <=10^2))
colnames(castedcors)[4] <- "value"
castedcors$parameter <- substr(as.character(castedcors$variable), 1, 1)
castedcors$statevar <- substr(as.character(castedcors$variable), 2, length(castedcors$variable))
lens <- nchar(as.character(castedcors$statevar)) 
castedcors$statevar[substr(castedcors$statevar, lens, lens)=="0"] <- "theta[0]"
castedcors$statevar[substr(castedcors$statevar, lens, lens)=="1"] <- "theta[1]"
castedcors$statevar[substr(castedcors$statevar, lens, lens)=="T"] <- "theta[T]"
castedcors$statevar[substr(castedcors$statevar, lens, lens)=="2"] <- "theta[frac(T,2)]"
castedcors$statevar[substr(castedcors$statevar, lens-2, lens)=="hT4"] <- "theta[frac(T,4)]"
castedcors$statevar[substr(castedcors$statevar, lens-2, lens)=="3T4"] <- "theta[frac(paste(3,T),4)]"
ggplot(data=castedcors, aes(x=V.T, y=W.T, fill=value)) + 
  geom_tile() + 
  facet_grid(parameter~statevar, scales="free", labeller=label_parsed) + 
  scale_x_log10("V = noise", breaks=Vs) + 
  scale_y_log10("W = signal", breaks=Vs) + 
  ggtitle(title) + 
  theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust=0.5)) +
  scale_fill_gradient2("Corr", low=muted("blue"), high=muted("red"), 
                       limits=c(-1,1), mid="white", guide=guide_colorbar(barheight=10))
@


<<gammacorplotT10, echo=FALSE, fig.cap=cap, fig.height=3.5, fig.width=7>>=
cap <- "Posterior correlations between either $V$ or $W$ and some of the $\\gamma$'s for a time series of length $T=10$. $X$ and $Y$ axes indicate the true values of $V$ and $W$ respectively for the simulated data. Note that the signal-to-noise ratio is constant moving up any diagonal. In the upper left the signal is high, in the lower right the noise is high."
vars1 <- c("theta0", "gamma1", "gaT4", "gaT2", "ga3T4", "gammaT")
vars <- c(paste("V", vars1, sep=""), paste("W", vars1, sep=""))
title <- expression(paste("Correlation Between V or W and the ", gamma, 
        "'s,", "T=", 10))
castedcors <- dcast(meltedcors, formula=V.T + W.T + variable ~ .,
                    subset=.(variable %in% vars & T.T==10 & V.T<=10^2 & W.T <=10^2))
colnames(castedcors)[4] <- "value"
castedcors$parameter <- substr(as.character(castedcors$variable), 1, 1)
castedcors$statevar <- substr(as.character(castedcors$variable), 2, length(castedcors$variable))
lens <- nchar(as.character(castedcors$statevar)) 
castedcors$statevar[substr(castedcors$statevar, lens, lens)=="0"] <- "gamma[0]"
castedcors$statevar[substr(castedcors$statevar, lens, lens)=="1"] <- "gamma[1]"
castedcors$statevar[substr(castedcors$statevar, lens, lens)=="T"] <- "gamma[T]"
castedcors$statevar[substr(castedcors$statevar, lens, lens)=="2"] <- "gamma[frac(T,2)]"
castedcors$statevar[substr(castedcors$statevar, lens-2, lens)=="aT4"] <- "gamma[frac(T,4)]"
castedcors$statevar[substr(castedcors$statevar, lens-2, lens)=="3T4"] <- "gamma[frac(paste(3,T),4)]"
ggplot(data=castedcors, aes(x=V.T, y=W.T, fill=value)) + 
  geom_tile() + 
  facet_grid(parameter~statevar, scales="free", labeller=label_parsed) + 
  scale_x_log10("V = noise", breaks=Vs) + 
  scale_y_log10("W = signal", breaks=Vs) + 
  ggtitle(title) + 
  theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust=0.5)) +
  scale_fill_gradient2("Corr", low=muted("blue"), high=muted("red"), 
                       limits=c(-1,1), mid="white", guide=guide_colorbar(barheight=10))
@ 


<<gammacorplotT100, echo=FALSE, fig.cap=cap, fig.height=3.5, fig.width=7>>=
cap <- "Posterior correlations between either $V$ or $W$ and some of the $\\gamma$'s for a time series of length $T=100$. $X$ and $Y$ axes indicate the true values of $V$ and $W$ respectively for the simulated data. Note that the signal-to-noise ratio is constant moving up any diagonal. In the upper left the signal is high, in the lower right the noise is high."
vars1 <- c("theta0", "gamma1", "gaT4", "gaT2", "ga3T4", "gammaT")
vars <- c(paste("V", vars1, sep=""), paste("W", vars1, sep=""))
title <- expression(paste("Correlation Between V or W and the ", gamma, 
        "'s,", "T=", 100))
castedcors <- dcast(meltedcors, formula=V.T + W.T + variable ~ .,
                    subset=.(variable %in% vars & T.T==100 & V.T<=10^2 & W.T <=10^2))
colnames(castedcors)[4] <- "value"
castedcors$parameter <- substr(as.character(castedcors$variable), 1, 1)
castedcors$statevar <- substr(as.character(castedcors$variable), 2, length(castedcors$variable))
lens <- nchar(as.character(castedcors$statevar)) 
castedcors$statevar[substr(castedcors$statevar, lens, lens)=="0"] <- "gamma[0]"
castedcors$statevar[substr(castedcors$statevar, lens, lens)=="1"] <- "gamma[1]"
castedcors$statevar[substr(castedcors$statevar, lens, lens)=="T"] <- "gamma[T]"
castedcors$statevar[substr(castedcors$statevar, lens, lens)=="2"] <- "gamma[frac(T,2)]"
castedcors$statevar[substr(castedcors$statevar, lens-2, lens)=="aT4"] <- "gamma[frac(T,4)]"
castedcors$statevar[substr(castedcors$statevar, lens-2, lens)=="3T4"] <- "gamma[frac(paste(3,T),4)]"
ggplot(data=castedcors, aes(x=V.T, y=W.T, fill=value)) + 
  geom_tile() + 
  facet_grid(parameter~statevar, scales="free", labeller=label_parsed) + 
  scale_x_log10("V = noise", breaks=Vs) + 
  scale_y_log10("W = signal", breaks=Vs) + 
  ggtitle(title) + 
  theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust=0.5)) +
  scale_fill_gradient2("Corr", low=muted("blue"), high=muted("red"), 
                       limits=c(-1,1), mid="white", guide=guide_colorbar(barheight=10))
@ 


<<gammacorplotT1000, echo=FALSE, fig.cap=cap, fig.height=3.5, fig.width=7>>=
cap <- "Posterior correlations between either $V$ or $W$ and some of the $\\gamma$'s for a time series of length $T=1000$. $X$ and $Y$ axes indicate the true values of $V$ and $W$ respectively for the simulated data. Note that the signal-to-noise ratio is constant moving up any diagonal. In the upper left the signal is high, in the lower right the noise is high."
vars1 <- c("theta0", "gamma1", "gaT4", "gaT2", "ga3T4", "gammaT")
vars <- c(paste("V", vars1, sep=""), paste("W", vars1, sep=""))
title <- expression(paste("Correlation Between V or W and the ", gamma, 
        "'s,", "T=", 1000))
castedcors <- dcast(meltedcors, formula=V.T + W.T + variable ~ .,
                    subset=.(variable %in% vars & T.T==1000 & V.T<=10^2 & W.T <=10^2))
colnames(castedcors)[4] <- "value"
castedcors$parameter <- substr(as.character(castedcors$variable), 1, 1)
castedcors$statevar <- substr(as.character(castedcors$variable), 2, length(castedcors$variable))
lens <- nchar(as.character(castedcors$statevar)) 
castedcors$statevar[substr(castedcors$statevar, lens, lens)=="0"] <- "gamma[0]"
castedcors$statevar[substr(castedcors$statevar, lens, lens)=="1"] <- "gamma[1]"
castedcors$statevar[substr(castedcors$statevar, lens, lens)=="T"] <- "gamma[T]"
castedcors$statevar[substr(castedcors$statevar, lens, lens)=="2"] <- "gamma[frac(T,2)]"
castedcors$statevar[substr(castedcors$statevar, lens-2, lens)=="aT4"] <- "gamma[frac(T,4)]"
castedcors$statevar[substr(castedcors$statevar, lens-2, lens)=="3T4"] <- "gamma[frac(paste(3,T),4)]"
ggplot(data=castedcors, aes(x=V.T, y=W.T, fill=value)) + 
  geom_tile() + 
  facet_grid(parameter~statevar, scales="free", labeller=label_parsed) + 
  scale_x_log10("V = noise", breaks=Vs) + 
  scale_y_log10("W = signal", breaks=Vs) + 
  ggtitle(title) + 
  theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust=0.5)) +
  scale_fill_gradient2("Corr", low=muted("blue"), high=muted("red"), 
                       limits=c(-1,1), mid="white", guide=guide_colorbar(barheight=10))
@ 


<<psicorplotT10, echo=FALSE, fig.cap=cap, fig.height=3.5, fig.width=7>>=
cap <- "Posterior correlations between either $V$ or $W$ and some of the $\\psi$'s for a time series of length $T=10$. $X$ and $Y$ axes indicate the true values of $V$ and $W$ respectively for the simulated data. Note that the signal-to-noise ratio is constant moving up any diagonal. In the upper left the signal is high, in the lower right the noise is high."
vars1 <- c("theta0", "psi1", "psT4", "psT2", "ps3T4", "psiT")
vars <- c(paste("V", vars1, sep=""), paste("W", vars1, sep=""))
title <- expression(paste("Correlation Between V or W and the ", psi, 
        "'s,", "T=", 10))
castedcors <- dcast(meltedcors, formula=V.T + W.T + variable ~ .,
                    subset=.(variable %in% vars & T.T==10 & V.T<=10^2 & W.T <=10^2))
colnames(castedcors)[4] <- "value"
castedcors$parameter <- substr(as.character(castedcors$variable), 1, 1)
castedcors$statevar <- substr(as.character(castedcors$variable), 2, length(castedcors$variable))
lens <- nchar(as.character(castedcors$statevar)) 
castedcors$statevar[substr(castedcors$statevar, lens, lens)=="0"] <- "psi[0]"
castedcors$statevar[substr(castedcors$statevar, lens, lens)=="1"] <- "psi[1]"
castedcors$statevar[substr(castedcors$statevar, lens, lens)=="T"] <- "psi[T]"
castedcors$statevar[substr(castedcors$statevar, lens, lens)=="2"] <- "psi[frac(T,2)]"
castedcors$statevar[substr(castedcors$statevar, lens-2, lens)=="sT4"] <- "psi[frac(T,4)]"
castedcors$statevar[substr(castedcors$statevar, lens-2, lens)=="3T4"] <- "psi[frac(paste(3,T),4)]"
ggplot(data=castedcors, aes(x=V.T, y=W.T, fill=value)) + 
  geom_tile() + 
  facet_grid(parameter~statevar, scales="free", labeller=label_parsed) + 
  scale_x_log10("V = noise", breaks=Vs) + 
  scale_y_log10("W = signal", breaks=Vs) + 
  ggtitle(title) + 
  theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust=0.5)) +
  scale_fill_gradient2("Corr", low=muted("blue"), high=muted("red"), 
                       limits=c(-1,1), mid="white", guide=guide_colorbar(barheight=10))
@ 

<<psicorplotT100, echo=FALSE, fig.cap=cap, fig.height=3.5, fig.width=7>>=
cap <- "Posterior correlations between either $V$ or $W$ and some of the $\\psi$'s for a time series of length $T=100$. $X$ and $Y$ axes indicate the true values of $V$ and $W$ respectively for the simulated data. Note that the signal-to-noise ratio is constant moving up any diagonal. In the upper left the signal is high, in the lower right the noise is high."
vars1 <- c("theta0", "psi1", "psT4", "psT2", "ps3T4", "psiT")
vars <- c(paste("V", vars1, sep=""), paste("W", vars1, sep=""))
title <- expression(paste("Correlation Between V or W and the ", psi, 
        "'s,", "T=", 100))
castedcors <- dcast(meltedcors, formula=V.T + W.T + variable ~ .,
                    subset=.(variable %in% vars & T.T==100 & V.T<=10^2 & W.T <=10^2))
colnames(castedcors)[4] <- "value"
castedcors$parameter <- substr(as.character(castedcors$variable), 1, 1)
castedcors$statevar <- substr(as.character(castedcors$variable), 2, length(castedcors$variable))
lens <- nchar(as.character(castedcors$statevar)) 
castedcors$statevar[substr(castedcors$statevar, lens, lens)=="0"] <- "psi[0]"
castedcors$statevar[substr(castedcors$statevar, lens, lens)=="1"] <- "psi[1]"
castedcors$statevar[substr(castedcors$statevar, lens, lens)=="T"] <- "psi[T]"
castedcors$statevar[substr(castedcors$statevar, lens, lens)=="2"] <- "psi[frac(T,2)]"
castedcors$statevar[substr(castedcors$statevar, lens-2, lens)=="sT4"] <- "psi[frac(T,4)]"
castedcors$statevar[substr(castedcors$statevar, lens-2, lens)=="3T4"] <- "psi[frac(paste(3,T),4)]"
ggplot(data=castedcors, aes(x=V.T, y=W.T, fill=value)) + 
  geom_tile() + 
  facet_grid(parameter~statevar, scales="free", labeller=label_parsed) + 
  scale_x_log10("V = noise", breaks=Vs) + 
  scale_y_log10("W = signal", breaks=Vs) + 
  ggtitle(title) + 
  theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust=0.5)) +
  scale_fill_gradient2("Corr", low=muted("blue"), high=muted("red"), 
                       limits=c(-1,1), mid="white", guide=guide_colorbar(barheight=10))
@ 

<<psicorplotT1000, echo=FALSE, fig.cap=cap, fig.height=3.5, fig.width=7>>=
cap <- "Posterior correlations between either $V$ or $W$ and some of the $\\psi$'s for a time series of length $T=1000$. $X$ and $Y$ axes indicate the true values of $V$ and $W$ respectively for the simulated data. Note that the signal-to-noise ratio is constant moving up any diagonal. In the upper left the signal is high, in the lower right the noise is high."
vars1 <- c("theta0", "psi1", "psT4", "psT2", "ps3T4", "psiT")
vars <- c(paste("V", vars1, sep=""), paste("W", vars1, sep=""))
title <- expression(paste("Correlation Between V or W and the ", psi, 
        "'s,", "T=", 1000))
castedcors <- dcast(meltedcors, formula=V.T + W.T + variable ~ .,
                    subset=.(variable %in% vars & T.T==1000 & V.T<=10^2 & W.T <=10^2))
colnames(castedcors)[4] <- "value"
castedcors$parameter <- substr(as.character(castedcors$variable), 1, 1)
castedcors$statevar <- substr(as.character(castedcors$variable), 2, length(castedcors$variable))
lens <- nchar(as.character(castedcors$statevar)) 
castedcors$statevar[substr(castedcors$statevar, lens, lens)=="0"] <- "psi[0]"
castedcors$statevar[substr(castedcors$statevar, lens, lens)=="1"] <- "psi[1]"
castedcors$statevar[substr(castedcors$statevar, lens, lens)=="T"] <- "psi[T]"
castedcors$statevar[substr(castedcors$statevar, lens, lens)=="2"] <- "psi[frac(T,2)]"
castedcors$statevar[substr(castedcors$statevar, lens-2, lens)=="sT4"] <- "psi[frac(T,4)]"
castedcors$statevar[substr(castedcors$statevar, lens-2, lens)=="3T4"] <- "psi[frac(paste(3,T),4)]"
ggplot(data=castedcors, aes(x=V.T, y=W.T, fill=value)) + 
  geom_tile() + 
  facet_grid(parameter~statevar, scales="free", labeller=label_parsed) + 
  scale_x_log10("V = noise", breaks=Vs) + 
  scale_y_log10("W = signal", breaks=Vs) + 
  ggtitle(title) + 
  theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust=0.5)) +
  scale_fill_gradient2("Corr", low=muted("blue"), high=muted("red"), 
                       limits=c(-1,1), mid="white", guide=guide_colorbar(barheight=10))
@ 

\end{document}
