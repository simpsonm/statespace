\documentclass{article}
\usepackage{graphicx, color, amssymb, amsmath, bm, rotating, graphics,
epsfig, multicol}
\usepackage{fullpage}
\usepackage[maxfloats=48]{morefloats} %for >18 figures
\usepackage{booktabs}
\usepackage{caption}
\begin{document}

% \SweaveOpts{fig.path='figure/', fig.align='center', fig.show='hold'}
%                out.width=".47\\textwidth",
<<setup, include=FALSE, cache=FALSE>>=
options(replace.assign=TRUE,width=90)
opts_knit$set(eval.after = "fig.cap")
opts_chunk$set(dev="pdf",
               fig.lp = "",
               fig.keep="high",
               fig.show="hold",
               fig.align="center")
@


<<loaddata, echo=FALSE>>=
load("samout.RData")
library(ggplot2)
library(scales)
library(plyr)
library(xtable)
library(reshape2)
sams <- c("error", "state", "dist")
kerns <- c("sdkern", "sekern", "dekern", "trikern")
alts <- c("sdalt", "sealt", "dealt", "trialt")
ints <- c("sdint", "seint", "deint", "triint")
samout$type <- "Base"
samout$type[samout$sampler %in% kerns] <- "RandKern"
samout$type[samout$sampler %in% alts] <- "Alternating"
samout$type[samout$sampler %in% ints] <- "Interweaving"
samout$samplers <- "Base"
samout$samplers[substr(samout$sampler, 1, 2)=="sd"] <- "State-Dist"
samout$samplers[substr(samout$sampler, 1, 2)=="se"] <- "State-Error"
samout$samplers[substr(samout$sampler, 1, 2)=="de"] <- "Dist-Error"
samout$samplers[substr(samout$sampler, 1, 3)=="tri"] <- "Triple"

meltedsam <- melt(samout, id=c("type", "samplers", "sampler", "V.T", "W.T", 
                            "T.T"))
Vs <- unique(meltedsam$V.T)
Ws <- Vs
breaks <- round(Vs, 3)
label_both_parsed <- function(variable, value){
  llply(as.character(paste(variable, value, sep = ": ")), function(x) parse(text = x))
}
label_both_parsed_split <- function(variable, value){
  llply(as.character(paste(variable, value, sep = ": ")), 
        function(x) parse(text = strsplit(x, "\\.")[[1]][1]))
}
@ 


<<baseESplotT10, fig.cap=cap, echo=FALSE, fig.width=5, fig.height=3, out.width=".45\\textwidth">>=
cap <- "Effective sample size as a proportion of the actual sample size in posterior sampler for a time series of length $T=10$, $T=100$, and $T=1000$, for $V$, and  $W$, and for the state, scaled disturbance, and scaled error samplers. $X$ and $Y$ axes indicate the true values of $V$ and $W$ respectively for the simulated data. Note that the signal-to-noise ratio is constant moving up any diagonal. In the upper left the signal is high, in the lower right the noise is high. Also note that the actual sample size is $2500$ and that for plotting purposes, effective samples sizes larger than $2500$ were rounded down to $2500$. Note that the priors for $V$ and $W$ are independent $IG(5,4)$ so that the prior mean is 1."
vars <- c("V.ES", "W.ES")
castedsam <- dcast(meltedsam, formula=sampler + V.T + W.T + variable ~ ., 
                   subset=.(variable %in% vars  & T.T==10 & sampler %in% sams ))
colnames(castedsam)[5] <- "value"
ggplot(data=castedsam, aes(x=V.T, y=W.T, fill=value/2500)) + #$
  geom_tile() +
  scale_fill_gradient("EffSize", low=muted("red"), high="white",
                         guide=guide_colorbar(barheight=6),
                         limits=c(0,1), na.value="white") +
  facet_grid(variable~sampler, scales="free", labeller=label_both_parsed_split) +
  scale_x_log10("V = noise", breaks=breaks) + scale_y_log10("W = signal", breaks=breaks) +
  ggtitle("T=10") +
  theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust=0.5))

castedsam <- dcast(meltedsam, formula=sampler + V.T + W.T + variable ~ ., 
                   subset=.(variable %in% vars  & T.T==100 & sampler %in% sams ))
colnames(castedsam)[5] <- "value"
ggplot(data=castedsam, aes(x=V.T, y=W.T, fill=value/2500)) + #$
  geom_tile() +
  scale_fill_gradient("EffSize", low=muted("red"), high="white",
                         guide=guide_colorbar(barheight=6),
                         limits=c(0,1), na.value="white") +
  facet_grid(variable~sampler, scales="free", labeller=label_both_parsed_split) +
  scale_x_log10("V = noise", breaks=breaks) + scale_y_log10("W = signal", breaks=breaks) +
  ggtitle("T=100") +
  theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust=0.5))

castedsam <- dcast(meltedsam, formula=sampler + V.T + W.T + variable ~ ., 
                   subset=.(variable %in% vars  & T.T==1000 & sampler %in% sams ))
colnames(castedsam)[5] <- "value"
ggplot(data=castedsam, aes(x=V.T, y=W.T, fill=value/2500)) + #$
  geom_tile() +
  scale_fill_gradient("EffSize", low=muted("red"), high="white",
                         guide=guide_colorbar(barheight=6),
                         limits=c(0,1), na.value="white") +
  facet_grid(variable~sampler, scales="free", labeller=label_both_parsed_split) +
  scale_x_log10("V = noise", breaks=breaks) + scale_y_log10("W = signal", breaks=breaks) +
  ggtitle("T=1000") +
  theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust=0.5))
@ 




\end{document}
